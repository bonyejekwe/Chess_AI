
from all_moves import all_positions
# index by team, ypos, xpos  (board is flipped over x axis,
white_pawn_dev = [[-5, -5, -5, -5, -5, -5, -5, -5],  # 1
                  [0, 0, 0, 0, 0, 0, 0, 0],          # 2
                  [5, 5, 5, 5, 5, 5, 5, 5],          # 3
                  [10, 10, 10, 10, 10, 10, 10, 10],  # 4
                  [15, 15, 15, 15, 15, 15, 15, 15],  # 5
                  [20, 20, 20, 20, 20, 20, 20, 20],  # 6
                  [25, 25, 25, 25, 25, 25, 25, 25],  # 7
                  [30, 30, 30, 30, 30, 30, 30, 30]]  # 8

black_pawn_dev = [[30, 30, 30, 30, 30, 30, 30, 30],
                  [25, 25, 25, 25, 25, 25, 25, 25],
                  [20, 20, 20, 20, 20, 20, 20, 20],
                  [15, 15, 15, 15, 15, 15, 15, 15],
                  [10, 10, 10, 10, 10, 10, 10, 10],
                  [5, 5, 5, 5, 5, 5, 5, 5],
                  [0, 0, 0, 0, 0, 0, 0, 0],
                  [-5, -5, -5, -5, -5, -5, -5, -5]]

knight_dev = [[40, 40, 40, 40, 40, 40, 40, 40],
              [60, 60, 60, 60, 60, 60, 60, 60],
              [80, 80, 80, 80, 80, 80, 80, 80],
              [100, 100, 100, 100, 100, 100, 100, 100],
              [80, 80, 80, 80, 80, 80, 80, 80],
              [60, 60, 60, 60, 60, 60, 60, 60],
              [40, 40, 40, 40, 40, 40, 40, 40],
              [20, 20, 20, 20, 20, 20, 20, 20]]


def test_eval(team):
    m = [[None for _ in range(8)] for _ in range(8)]
    for x, y in all_positions:
        #m[y][x] = (5 * y * team) + (12.5 - (17.5 * team))  # pawn
        m[y][x] = 20 * (5 - abs(3 - y))
    for row in m:
        print(row)
#test_eval(-1)